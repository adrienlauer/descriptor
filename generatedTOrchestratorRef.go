package model

//*****************************************************************************
//
//     _         _           ____                           _           _
//    / \  _   _| |_ ___    / ___| ___ _ __   ___ _ __ __ _| |_ ___  __| |
//   / _ \| | | | __/ _ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` |
//  / ___ \ |_| | || (_) | | |_| |  __/ | | |  __/ | | (_| | ||  __/ (_| |
// /_/   \_\__,_|\__\___/   \____|\___|_| |_|\___|_|  \__,_|\__\___|\__,_|
//
// This file is autogenerated by "go generate .". Do not modify.
//
//*****************************************************************************

// ----------------------------------------------------
// Implementation(s) of TOrchestratorRef
// ----------------------------------------------------

//TOrchestratorRefOnOrchestratorRefHolder is the struct containing the OrchestratorRef in order to implement TOrchestratorRef
type TOrchestratorRefOnOrchestratorRefHolder struct {
	h OrchestratorRef
}

//CreateTOrchestratorRefForOrchestratorRef returns an holder of OrchestratorRef implementing TOrchestratorRef
func CreateTOrchestratorRefForOrchestratorRef(o OrchestratorRef) TOrchestratorRefOnOrchestratorRefHolder {
	return TOrchestratorRefOnOrchestratorRefHolder{
		h: o,
	}
}

//Orchestrator returns the orchestrator managing a node
func (r TOrchestratorRefOnOrchestratorRefHolder) Orchestrator() (TOrchestrator, error) {
	v, err := r.h.Resolve()
	return CreateTOrchestratorForOrchestrator(v), err
}
