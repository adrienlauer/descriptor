package model

//*****************************************************************************
//
//     _         _           ____                           _           _
//    / \  _   _| |_ ___    / ___| ___ _ __   ___ _ __ __ _| |_ ___  __| |
//   / _ \| | | | __/ _ \  | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` |
//  / ___ \ |_| | || (_) | | |_| |  __/ | | |  __/ | | (_| | ||  __/ (_| |
// /_/   \_\__,_|\__\___/   \____|\___|_| |_|\___|_|  \__,_|\__\___|\__,_|
//
// This file is autogenerated by "go generate .". Do not modify.
//
//*****************************************************************************

// ----------------------------------------------------
// Implementation(s) of TTaskHooks
// ----------------------------------------------------

//TTaskHooksOnTaskHookHolder is the struct containing the TaskHook in order to implement TTaskHooks
type TTaskHooksOnTaskHookHolder struct {
	h TaskHook
}

//CreateTTaskHooksForTaskHook returns an holder of TaskHook implementing TTaskHooks
func CreateTTaskHooksForTaskHook(o TaskHook) TTaskHooksOnTaskHookHolder {
	return TTaskHooksOnTaskHookHolder{
		h: o,
	}
}

//HasExecute returns true if the hooks has tasks while executing
func (r TTaskHooksOnTaskHookHolder) HasExecute() bool {
	return r.h.Execute.HasTasks()
}

//Execute returns the executing tasks
func (r TTaskHooksOnTaskHookHolder) Execute() THook {
	return CreateTHookForHook(r.h.Execute)
}
